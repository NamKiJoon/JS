----------------------------------------------------------------------------
자바스크립트 역할

1. 입력 및 계산
2. 웹 동작을 구현
3. 웹 브라우저 제어
4. 백엔드와의 통신

----------------------------------------------------------------------------

변수, 상수

변수 -> 변하는 수

a라는 변수를 사용하고 싶다.
변수를 '선언' 한다
let 이라는 건 모든 자료형을 받는 것!

let a;
let a = 5;

console.log(a) ---> 5
a = 10;
console.log(a) ---> 10

상수 -> 변하지 않는 수

    a라는 상수를 사용하고 싶다.
    상수를 '선언'한다.

    const a =5;
    console.log(a) ---> 5
    a=10 -------------------- ERROR
    console.log(a) ---> 10?


----------------------------------------------------------------------------


호이스팅
    :선언 시에 선언부를 강제로 최상단으로 올려서 사용!

    var(변수 ~ ES5)
        "호이스팅을 함!" , 중복 사용 가능

        ex)
            * let의 경우
                console.log(a); ------- ERROR(참조 오류)
                let a = 5;

            * var의 경우
                console.log(b); ------- undefined
                var b = 5;


                var b;

                console.log(b);
                b = 5;


----------------------------------------------------------------------------

    *let 도 호이스팅 함.
    하지만 호이스팅 시 참조에러를 일으켜서 호이스팅이 안되는 것처럼 만든 것
    
----------------------------------------------------------------------------

    html 파싱과정, google.com을 검색했을 때 일어나는 일
    ES6 이전과 이후의 차이
    let 과 var의 차이
    method get과 post의 차이 + React + 프로젝트 => 기술 면접

----------------------------------------------------------------------------

    자료형(Data Type)
        자바스크립트는 자료형을 명시하지는 않는다.
        하지만 자바스크립트도 엄연히 자료형을 가지고 있다.
        해당 자료형을 콘솔로 찍어볼 수 있으며
        숫자형에 문자열을 넣으면 에러가 나거나 인식을 못하는 경우가 있기 때문에 자료형을 알고 있고
        해당 자료형을 콘솔에 찍어서 비교할 수 있어야 한다.

        1. 숫자형 (number)
            정수와 실수를 따로 구분하지 않고 모든 수를 하나의 자료형으로 표현
        
        2. 문자열 (string)
            문자와 문자열 단위를 구분하지 않고 문자인 경우 하나의 자료형으로 표현

        3. undefined
            값이 아예 할당되지 않음(정의되지 않았다.), 자료형이 정해져있지 않음.
        
        4. null
            값이 비어있다. 빈 공간, 변수를 초기화하기 위해 사용

        **5. 객체형 (object)
            강아지 한마리
            이름 : '콩이'
            나이 : 3살
            몸무게 : 4kg
            
            "콩이는 강아지고 나이는 3살, 몸무게는 4kg입니다.

            let animal = "DOG";
            let animalName = "콩이";
        
            let dog={
                name : "콩이",   //dog의 name이라는 값은 콩이야!
                age : 3,
                weight : "4kg"
                another{
                    name : "배추"
                }
            }
            여러 값을 하나의 변수에 저장할 수 있도록 해주는 타입
            구조는 키와 값(key - value)으로 이루어져 있음 또한, 자바스크립트에서는 객체를 명시하기 위해
            {}를 사용한다!

            * 객체의 하위 선택자
                console.log(dog); ---> {name:"콩이", ....} or object
                console.log(dog.name);
                console.log(dog.another.name)--->'배추'

            * 서버와 데이터 통신[주고 받을 때]을 할 때 가장 많이 사용하는 데이터 유형 (JSON)
                객체와 형태가 똑같음(키와 값으로 이루어져 있음) (key - value)
                {
                    "userId" : "NKJ"
                }

                백엔드한테 받는 데이터의 형태나 줘야하는 데이터의 형태가 보통은 json(객체와 유사한 데이터)
                주고 받게된다.! ( 익숙 해져야함 !! 객체형태 !!)
                {
                    title: '오늘의 일기'
                    content : '오늘은 즐거웠다'
                    img:{src: http://image/324234},
                    User:{
                        nickName:"남기준"
                        profileImage:{src: "http://image/324324}
                    }
                    createAt:"2022-09-04-12:31:43:62"
                }                
            
            * 변수를 문자열에 포함시키기 위해 어떻게 해야할까?
                 "콩이는 나이는 3살이고 몸무게는 4kg입니다."
                  1. console.log(dog.name+ "는 나이는" +dog.age + "살이며 몸무게는" + dog.weight + "입니다")
                  2. console.log(dog.name, "는 나이는" ,dog.age , "살이며 몸무게는" , dog.weight , "입니다")
                  3. console.log(`${dog.name}는 나이는" ${dog.age} 살이며 몸무게는" ${dog.weight}  입니다`)


        6. 심볼형
            자주 사용하지는 않음. 배열,객체의 키 값 용도로
            유일하고 변경 불가능한 기본값을 만드는 것(상징)



----------------------------------------------------------------------------

    undefined, null

----------------------------------------------------------------------------

    ********** 객체형
    심볼형

    01:09:13~~